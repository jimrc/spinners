diceroll <- function(n=10, plotIt=TRUE, bkg="red", pips = "white", edge=1.2){
  rollSeq <- sample(6, n, replace=TRUE)
  if(plotIt){
    opar <- par(mar=rep(1.1,4))
    pipLocs <- list(one = list(theta=0, r=0),
                    two = list(theta=c(1,5) * pi/4, r = .7),
                    tre = list(theta=c(1, 0, 5)*pi/4, r= c(.8,0,.8)),
                    four = list(theta=c(1,3,5,7)*pi/4, r = .8),
                    five = list(theta=c(1,3,3,5,7)*pi/4, r = c(1,1,0,1,1)*.9),
                    six = list(theta=c(1,3,0,4,5,7)*pi/4, r = c(.83, .83,.6,.6,.83,.83)))
    rotation <- runif(n, 0, pi/2)
    edge <- edge * sqrt(2) 
    for(ndx in 1:n){
      plot(-1:1 *2.6,-1:1 *2.6, type="n",xlab="",ylab="",xaxt="n",yaxt="n", fin=c(2,2), bty="n")
      polygon(x = edge*cos(rotation[ndx] + c(1,-1,-3,3)*pi/4),  col=bkg, 
              y = edge*sin(rotation[ndx] +c(1,-1,-3,3)*pi/4 ) * dev.size()[1]/dev.size()[2])
      points(x= cos(pipLocs[[rollSeq[ndx]]]$theta + rotation[ndx]) * pipLocs[[rollSeq[ndx]]]$r ,
             y= sin(pipLocs[[rollSeq[ndx]]]$theta + rotation[ndx]) * pipLocs[[rollSeq[ndx]]]$r *
               dev.size()[1]/dev.size()[2], col= pips, cex=5, pch=20)
      Sys.sleep(.1)
    }
  }
  par(opar)
  rollSeq
}
# diceroll(10)


